/////////////////////////// Example 1 - –ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–æ–º

// –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ genres —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª –∏ ¬´Blues¬ª.
// –î–æ–±–∞–≤—å—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª –≤ –∫–æ–Ω–µ—Ü.
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.
// –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
// –í—Å—Ç–∞–≤—å—Ç–µ ¬´Country¬ª –∏ ¬´Reggae¬ª –≤ –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞.
// const genress = ["¬´Jazz¬ª", "¬´Blues¬ª"];

// genress.push("¬´–†–æ–∫-–Ω-—Ä–æ–ª–ª¬ª");

// console.log(genress[0]);

// console.log(genress[genress.length - 1]);

// const deletedGenress = genress.splice(0, 1);

// console.log(deletedGenress);

// genress.splice(0, 0, '¬´Country¬ª', '¬´Reggae¬ª');

// console.table(genress);

///////////////////////////Example 2 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π values –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
// –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// const values = "8 11";

// const rectangle = values.split(" ");

// const square = rectangle[0] * rectangle[1];

// console.table(square);

////////////////////////////// Example 3 - –ü–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ fruits —Ü–∏–∫–ª–æ–º for.
// –î–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä_—ç–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–∏–µ_—ç–ª–µ–º–µ–Ω—Ç–∞.
// –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1.

// const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];

// for (let i = 0; i < fruits.length; i += 1) {
//    console.log(`${i + 1}: ${fruits[i]}`);
// }

///////////////////////////////// Example 4 - –ú–∞—Å—Å–∏–≤—ã –∏ —Ü–∏–∫–ª—ã

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
// –í –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö names –∏ phones —Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏.
// –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ.–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ.

// const names = "Jacob,William,Solomon,Artemis";
// const phones = "89001234567,89001112233,890055566377,890055566300";

// const namesArray = names.split(",");

// const phonesArray = phones.split(",");

// for (let i = 0; i < nameArray.length; i += 1) {
//    console.log(`${namesArray[i]}: ${phonesArray[i]}`);
// }

///////////////////////////////Example 5 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏

//–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Å–ª–æ–≤–∞ —Å—Ç—Ä–æ–∫–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ.
//–†–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è –∏–ª–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –ø—Ä–æ–±–µ–ª—å–Ω—ã–º —Å–∏–º–≤–æ–ª–æ–º.–°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–π —Å—Ç—Ä–æ–∫–∏.

// const strings = "Welcome to the future";

// let massage = strings.split(" ");

// massage = massage.splice(1, massage.length && massage.length - 2).join(' ');

// console.log(massage);

///////////////////////////////Example 6 - –ú–∞—Å—Å–∏–≤—ã –∏ —Å—Ç—Ä–æ–∫–∏
//–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∫–æ—Ç–æ—Ä—ã–π ¬´—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç¬ª —Å—Ç—Ä–æ–∫—É (–æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–µ –≤ –∫–æ–Ω—Å–æ–ª—å.

// const string = 'Welcome to the future';

// let masseges = string.split('')
// let stringMassege = '';

// for (let i = masseges.length - 1; i >= 0; i -= 1) {

//     stringMassege += masseges[i];
// }

// console.log(stringMassege);

/////////////////////////////–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –ø–æ –ø–µ—Ä–≤–æ–π –±—É–∫–≤–µ —ç–ª–µ–º–µ–Ω—Ç–∞.

// const langs = ["python", "javascript", "c++", "haskel", "php", "ruby"];

// let massege = "";

//////////////////////////////–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ.

//–ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª.–ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.

// const numbers = [2, 17, 94, 1, 23, 37];

// let min = 10000;

// for (let i = 0; i < numbers.length + 1; i += 1) {
//    if (numbers[i] < min) {
//       min = numbers[i];
//    }
// }
// console.log(min); // 1

// –ù–∞–ø–∏—à—ñ—Ç—å 3 —Ü–∏–∫–ª–∞:
// 1–π —Ü–∏–∫–ª: –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —á–∏—Å–ª–∞ –≤—ñ–¥ max –¥–æ min –ø–æ –∑–º–µ–Ω—à–µ–Ω—é (—É–±—ã–≤–∞–Ω–∏—é).
// 2–π —Ü–∏–∫–ª: –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ –ø–∞—Ä–Ω—ñ (—á–µ—Ç–Ω—ã–µ) —á–∏—Å–ª–∞ –≤—ñ–¥ min –¥–æ max.
// 3–π —Ü–∏–∫–ª: –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Å—É–º—É —É—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö (—á–µ—Ç–Ω—ã—Ö) —á–∏—Å–µ–ª –≤—ñ–¥ min –¥–æ max

// const max = 50;
// const min = 23;
// let sum = 0;

// for (let i = max; i >= min; i -= 1) {
//    console.log(i);
// }

// for (let i = min; i <= max; i += 1) {
//    if (i % 2 === 0) console.log(i);
// }

// for (let i = min; i <= max; i += 1) {
//    if (i % 2 === 0);
//    sum += i;
// }

// console.log(sum);

// // –Æ–∑–µ—Ä –º–∞—î –≤–≤–µ—Å—Ç–∏ —Å—É–º—É –∫–æ—à—Ç—ñ–≤, —è–∫–∞ —î –Ω–∞ –π–æ–≥–æ –∫–∞—Ä—Ç—Ü—ñ —Ç–∞ —Ü—ñ–Ω—É –∑–∞ 1 –ª—ñ—Ç—Ä –±–µ–Ω–∑–∏–Ω—É –Ω–∞ –ê–ó–°.
// // –í–∏–≤–µ–¥—ñ—Ç—å —ñ–Ω—Ñ—É, —è–∫–∞ –ø—Ä–æ—ñ–Ω—Ñ–æ—Ä–º—É—î —Å–∫—ñ–ª—å–∫–∏ –±–µ–Ω–∑–∏–Ω—É –≤—ñ–Ω –º–æ–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫—É–ø–∏—Ç–∏, —Å–∫—ñ–ª—å–∫–∏ –≥—Ä–æ—à–µ–π
// // —É –Ω—å–æ–≥–æ –∑–∞–ª–∏—à–∏—Ç—å—Å—è —Ç–∞ —è–∫–∏–π –±–æ–Ω—É—Å –±—É–¥–µ –π–æ–º—É –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–æ, —è–∫—â–æ –≤—ñ–Ω —î —É—á–∞—Å–Ω–∏–∫–æ–º –ø—Ä–æ–≥. –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ.
// // –ë–æ—É—Å–∞—Ü—ñ—è: –ó–∞ –∫–æ–∂–µ–Ω –æ–ø–ª–∞—á–µ–Ω–∏–π –ª—ñ—Ç—Ä –±–µ–Ω–∑–∏–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ—Ç—Ä–∏–º—É—î –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è - 2% –≤—ñ–¥ –≤–∞—Ä—Ç–æ—Å—Ç—ñ.
// let isLoyalty = true;
// const costPetrol;
// const userMaxPrice;

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findLongestWord(string), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω–∏–π —Ä—è–¥–æ–∫, —â–æ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –∑—ñ —Å–ª—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏—Ö –ø—Ä–æ–±—ñ–ª–æ–º(–ø–∞—Ä–∞–º–µ—Ç—Ä string),
// —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–π–¥–æ–≤—à–µ —Å–ª–æ–≤–æ –≤ —Ü—å–æ–º—É —Ä—è–¥–∫—É.

// function findLongestWord(string) {
//    // Change code below this line
//    let stringArr = string.split(" ");
//    let maxString = stringArr[0];

//    for (let i = 0; i < stringArr.length; i += 1) {
//       let maxStringI = stringArr[i];

//       if (maxString.length < maxStringI.length) {
//          maxString = stringArr[i];
//       }
//    }
//    return maxString;
//    //    console.log(maxString);
//    // Change code above this line
// }

// console.log(
//    findLongestWord(
//       "sad assaass sdasd asdksalp asawssds 11111111111111111111111111"
//    )
// );

// function createArrayOfNumbers(min, max) {
//    const numbers = [];
//    // Change code below this line
//    for (let i = min; i <= max; i += 1) {
//       numbers.push(i);
//    }

//    // Change code above this line
//    return numbers;
// }

// console.log(createArrayOfNumbers(21, 56));

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é filterArray(numbers, value), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª(–ø–∞—Ä–∞–º–µ—Ç—Ä numbers) —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
// –≤ —è–∫–æ–º—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É numbers, —è–∫—ñ –±—ñ–ª—å—à—ñ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value(—á–∏—Å–ª–æ).

// function filterArray(numbers, value) {
//    // Change code below this line
//    let result = [];

//    for (let i = 0; i < numbers.length; i += 1) {
//       if (numbers[i] > value) {
//          result.push(numbers[i]);
//       }
//    }
//    return result;
// }

// console.log(filterArray([12, 24, 8, 41, 76], 20));
// Change code above this line

// function getCommonElements(array1, array2) {
//    // Change code below this line
//    let result = [];

//    for (let i = 0; i < array1.length; i += 1) {
//       if (array2.includes(array1[i])) {
//          result.push(array1[i]);
//       }
//    }
//    return result;

//    // Change code above this line
// }

// console.log(getCommonElements([1, 2, 3], [2, 4])); // –ø–æ–≤–µ—Ä—Ç–∞—î [2]
// console.log(getCommonElements([1, 2, 3], [2, 1, 17, 19])); // –ø–æ–≤–µ—Ä—Ç–∞—î [1, 2]
// console.log(getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27])); // –ø–æ–≤–µ—Ä—Ç–∞—î [12, 27, 3]
// console.log(getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40])); // –ø–æ–≤–µ—Ä—Ç–∞—î [10, 30, 40]

// –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice(order), –∑–∞–º—ñ–Ω–∏–≤—à–∏ —Ü–∏–∫–ª for –Ω–∞ for...of.

// function calculateTotalPrice(order) {
//    let total = 0;
//    // Change code below this line

//    for (const price of order) {
//       total += price;
//    }

//    // Change code above this line
//    return total;
// }

// console.log(calculateTotalPrice([12, 85, 37, 4])); //–ø–æ–≤–µ—Ä—Ç–∞—î 138
// console.log(calculateTotalPrice([164, 48, 291])); //–ø–æ–≤–µ—Ä—Ç–∞—î 503
// console.log(calculateTotalPrice([412, 371, 94, 63, 176])); //–ø–æ–≤–µ—Ä—Ç–∞—î 1116

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é includes(array, value), —è–∫–∞ —Ä–æ–±–∏—Ç—å —Ç–µ —Å–∞–º–µ, —â–æ —ñ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤—É –º–∞—Å–∏–≤.includes(–∑–Ω–∞—á–µ–Ω–Ω—è) - –ø–µ—Ä–µ–≤—ñ—Ä—è—î,
// —á–∏ –ø—Ä–∏—Å—É—Ç–Ω—î –≤ –º–∞—Å–∏–≤—ñ array –∑–Ω–∞—á–µ–Ω–Ω—è value, –ø–æ–≤–µ—Ä—Ç–∞—é—á–∏ true, —è–∫—â–æ –ø—Ä–∏—Å—É—Ç–Ω—î, —ñ false –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

// –ü—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ —Ü—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –≤ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó includes() –Ω–µ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤.includes(–∑–Ω–∞—á–µ–Ω–Ω—è).

// function includes(array, value) {
//    // Change code below this line

//    for (let i = 0; i < array.length; i += 1) {
//       let result = 0;
//       if (value === array[i]) {
//          result = array[i];
//          if (result === undefined) {
//             result = false;
//          }
//          return Boolean(result);
//       }
//    }
//    return false;
//    // Change code above this line
// }

// console.log(includes([1, 2, 3, 4, 5], 3)); //–ø–æ–≤–µ—Ä—Ç–∞—î true
// console.log(includes([1, 2, 3, 4, 5], 17)); //–ø–æ–≤–µ—Ä—Ç–∞—î false
// console.log(
//    includes(["Earth", "Mars", "Venus", "Jupiter", "Saturn"], "Jupiter")
// ); //–ø–æ–≤–µ—Ä—Ç–∞—î true
// console.log(
//    includes(["Earth", "Mars", "Venus", "Jupiter", "Saturn"], "Uranus")
// ); //–ø–æ–≤–µ—Ä—Ç–∞—î false
// console.log(includes(["apple", "plum", "pear", "orange"], "plum")); //–ø–æ–≤–µ—Ä—Ç–∞—î true
// console.log(includes(["apple", "plum", "pear", "orange"], "kiwi")); //–ø–æ–≤–µ—Ä—Ç–∞—î false

/////////////////////////////////////////////////////////////////////////////////////// –ú–æ–¥—É–ª—å 2. –ó–∞–Ω—è—Ç—Ç—è 4. –§—É–Ω–∫—Ü—ñ—ó

// Example 1 - –Ü–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calcBMI(weight, height) —è–∫–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –ª—é–¥–∏–Ω–∏.
// –î–ª—è —Ü—å–æ–≥–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ –≤–∞–≥—É –≤ –∫—ñ–ª–æ–≥—Ä–∞–º–∞—Ö –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç –≤–∏—Å–æ—Ç–∏ –ª—é–¥–∏–Ω–∏ –≤ –º–µ—Ç—Ä–∞—Ö.

// –í–∞–≥–∞ —Ç–∞ –≤–∏—Å–æ—Ç–∞ –±—É–¥—É—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ñ —è–∫ —Ä—è–¥–∫–∏.–ù–µ —Ü—ñ–ª—ñ —á–∏—Å–ª–∞ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∑–∞–¥–∞–Ω—ñ —É –≤–∏–≥–ª—è–¥—ñ 24.7 –∞–±–æ 24, 7
// —Ç–æ–±—Ç–æ —è–∫ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ –¥—Ä–æ–±–æ–≤–æ—ó —á–∞—Å—Ç–∏–Ω–∏ –º–æ–∂–µ –±—É—Ç–∏ –∫–æ–º–∞.

// –Ü–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –æ–∫—Ä—É–≥–ª–∏—Ç–∏ –¥–æ –æ–¥–Ω—ñ—î—ó —Ü–∏—Ñ—Ä–∏ –ø—ñ—Å–ª—è –∫–æ–º–∏;

// const arrNormalaze = [];

// function stringToArray(...arr) {
//    normalizeCommaToDot(arr);
// }

// function normalizeCommaToDot(num) {
//    for (let i = 0; i < num.length; i += 1) {
//       arrNormalaze[i] = num[i].replaceAll(",", ".");
//    }
// }

// function calcBMI(weight, height) {
//    stringToArray(weight, height);
//    return +(arrNormalaze[0] / Math.pow(arrNormalaze[1], 2)).toFixed(1);
// }

// const bmi = calcBMI("88,3", "1.75");
// console.log(bmi); // 28.8

///////////////////////////////////////////–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é min(a,b), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–π–º–µ–Ω—à–µ –∑ —á–∏—Å–µ–ª a —Ç–∞ b.

// function minNum(a, b) {
//    let result = a;
//    if (a > b) result = b;
//    return result;
// }

// console.log(minNum(2, 5)); // 2
// console.log(minNum(3, -1)); // -1
// console.log(minNum(1, 1)); // 1

////////////////////////////////////////////Example 3 - –ü–ª–æ—â–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getRectArea(dimensions) –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏,
// –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ –¥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ dimensions —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞.–ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.

// function getRectArea(dimensions) {
//    const array = dimensions.split(" ");

//    return array[0] * array[1];
// }

// console.log(getRectArea("8 11"));

//////////////////////////////////////////////////////////////// Example 4 - –õ–æ–≥—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª for,
// —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ < –Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞ > - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ >.
// –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.

// –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑ —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.

// function logItems(items) {
//    let result = [];
//    for (let i = 0; i < items.length; i += 1) {
//       result[i] = `${i + 1}: ${items[i]}`;
//    }
//    return result;
// }

// console.table(logItems(["Mango", "Poly", "Ajax"]));
// console.table(logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]));

// Example 5 - –õ–æ–≥—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printContactsInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
// –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ names —Ç–∞ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏.
// –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å.–ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.

// function printContactsInfo(names, phones) {
//    let result = [];
//    for (let i = 0; i < nameToArr(names).length; i += 1) {
//       result.push(`${nameToArr(names)[i]}: ${phonesToArr(phones)[i]}`);
//    }
//    return result;
// }

// function nameToArr(names) {
//    return names.split(",");
// }

// function phonesToArr(phones) {
//    return phones.split(",");
// }

// console.log(
//    printContactsInfo(
//       "Jacob,William,Solomon,Artemis",
//       "89001234567,89001112233,890055566377,890055566300"
//    )
// );

////////////////////////////////////////////////////////////////////////Example 6 - –ü–æ—à—É–∫ –Ω–∞–π–±—ñ–ª—å—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞

//–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findLargestNumber(numbers)—è–∫–∞ —à—É–∫–∞—î –Ω–∞–π–±—ñ–ª—å—à–µ —á–∏—Å–ª–æ –≤ –º–∞—Å–∏–≤—ñ.

// function findLargestNumber(numbers) {
//    let maxNumber = numbers[0];
//    for (let i = 0; i < numbers.length; i += 1) {
//       if (maxNumber < numbers[i]) maxNumber = numbers[i];
//    }
//    return maxNumber;
// }

// console.log(findLargestNumber([2, 17, 94, 1, 23, 37])); // 94
// console.log(findLargestNumber([49, 4, 7, 83, 12])); // 83

///////////////////////////////////////////////////////////////////////////Example 7 - –°–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calAverage() —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è.
// –£—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –±—É–¥—É—Ç—å –ª–∏—à–µ —á–∏—Å–ª–∞–º–∏.

// function calAverage(...arr) {
//    let result = 0;
//    for (const number of arr) {
//       result += number / arr.length;
//    }
//    return result;
// }

// console.log(calAverage(1, 2, 3, 4)); // 2.5
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2

// Example 8 - –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(minutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è minutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.

// function formatTime(totalMinutes) {
//    const hours = Math.floor(totalMinutes / 60);
//    const minutes = totalMinutes % 60;

//    return `${String(hours).padStart(2, 0)}:${String(minutes).padStart(2, 0)}`; //padStart; —Ä–∞–±–æ—Ç–∞—é—Ç —Å–æ —Å—Ç—Ä–æ–∫–æ–π
// }

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"

// Example 9 - –ö–æ–ª–µ–∫—Ü—ñ—è –∫—É—Ä—Å—ñ–≤ (includes, indexOf, push —ñ —Ç. –¥.)
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –∫—É—Ä—Å—ñ–≤ courses:

// addCourse(name) - –¥–æ–¥–∞—î –∫—É—Ä—Å –¥–æ –∫—ñ–Ω—Ü—è –∫–æ–ª–µ–∫—Ü—ñ—ó
// removeCourse(name) - –≤–∏–¥–∞–ª—è—î –∫—É—Ä—Å —ñ–∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
// updateCourse(oldName, newName) - –∑–º—ñ–Ω—é—î —ñ–º'—è –Ω–∞ –Ω–æ–≤–µ

// const courses = ["HTML", "CSS", "JavaScript", "React", "PostgreSQL"];

// function addCourse(cours) {
//    for (let i = 0; i < courses.length; i += 1) {
//       if (!courses.includes(cours)) {
//          courses.push(cours);
//       }
//    }
//    return "–í–∏ –≤–∂–µ –º–∞—î—Ç–µ —Ç–∞–∫–∏–π –∫—É—Ä—Å";
// }

// function removeCourse(cours) {
//    for (let i = 0; i < courses.length; i += 1) {
//       if (courses[i].includes(cours)) {
//          courses.splice(i, 1);
//       }
//    }
//    return "–ö—É—Ä—Å —ñ–∑ —Ç–∞–∫–∏–º —ñ–º'—è–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ";
// }

// function updateCourse(oldName, newName) {
//    for (let i = 0; i < courses.length; i += 1) {
//       if (courses[i].includes(oldName)) {
//          return courses.splice(i, 1, newName);
//       }
//    }
// }

// addCourse("Express");
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'React', 'PostgreSQL', 'Express']
// console.log(addCourse("CSS")); // '–í–∏ –≤–∂–µ –º–∞—î—Ç–µ —Ç–∞–∫–∏–π –∫—É—Ä—Å'

// removeCourse("React");
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'Express']
// console.log(removeCourse("Vue")); // '–ö—É—Ä—Å —ñ–∑ —Ç–∞–∫–∏–º —ñ–º'—è–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'

// updateCourse("Express", "NestJS");
// console.log(courses); // ['HTML', 'CSS', 'JavaScript', 'PostgreSQL', 'NestJS']

function countPositivesSumNegatives(input) {
   // your code here
   let sumPositiv = 0;
   let sumNegativ = 0;
   let sumArr = [];
   for (let i = 0; i < input.length; i += 1) {
      if (input[i] == 0) continue;
      else if (input[i] > 0) {
         sumPositiv += input[i];
      } else sumNegativ -= input[i];
   }
   sumArr.push(sumPositiv);
   sumArr.push(-sumNegativ);
   return sumArr;
}

console.log(
   countPositivesSumNegatives([
      0, 2, 3, 0, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14,
   ])
);
